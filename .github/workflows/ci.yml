name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Show repo layout (top 2 levels)
        shell: pwsh
        run: Get-ChildItem -Recurse -Depth 2 | Select-Object FullName

      - name: Detect .NET solution/project
        id: detect
        shell: pwsh
        run: |
          $path = $null
          $sln = Get-ChildItem -Recurse -Filter *.sln | Select-Object -First 1
          if ($sln) { $path = $sln.FullName } else {
            $csproj = Get-ChildItem -Recurse -Filter *.csproj | Select-Object -First 1
            if ($csproj) { $path = $csproj.FullName }
          }
          if ($path) {
            "path=$path"       | Out-File -FilePath $env:GITHUB_OUTPUT -Append
            "hasDotnet=true"   | Out-File -FilePath $env:GITHUB_OUTPUT -Append
            Write-Host "Found .NET project: $path"
          } else {
            "path="            | Out-File -FilePath $env:GITHUB_OUTPUT -Append
            "hasDotnet=false"  | Out-File -FilePath $env:GITHUB_OUTPUT -Append
            Write-Host "No .NET .sln/.csproj found. CI will skip .NET steps."
          }

      - name: Setup .NET SDK
        if: ${{ steps.detect.outputs.hasDotnet == 'true' }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            7.0.x
            6.0.x

      - name: Cache NuGet
        if: ${{ steps.detect.outputs.hasDotnet == 'true' }}
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json', '**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        if: ${{ steps.detect.outputs.hasDotnet == 'true' }}
        run: dotnet restore "${{ steps.detect.outputs.path }}"

      - name: Build
        if: ${{ steps.detect.outputs.hasDotnet == 'true' }}
        run: dotnet build "${{ steps.detect.outputs.path }}" --configuration Release --no-restore -v minimal

      - name: Test
        if: ${{ steps.detect.outputs.hasDotnet == 'true' }}
        run: dotnet test --configuration Release --no-build --verbosity normal
        continue-on-error: true

      - name: No-op (non-.NET repo)
        if: ${{ steps.detect.outputs.hasDotnet != 'true' }}
        run: echo "No .NET project detected — nothing to build. ✅"
